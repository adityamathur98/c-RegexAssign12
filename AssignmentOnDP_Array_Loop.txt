Q1. 1 1 2 3 5 8 13 .....
    a=1 b=1 c =a+b 

Ans. Approch 1 : -#include <bits/stdc++.h>
using namespace std;

int main()
{
    int a = 1, b = 1, c;
    cout << a << " " << b << " ";

    for (int i = 3; i < 8; i++)
    {
        c = a + b;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}

Approach 2 :- #include <bits/stdc++.h>
using namespace std;

void printArray(int arr[])
{
    for (int i = 0; i < 7; i++)
    {
        cout << arr[i] << " ";
    }
}

int main()
{
    int arr[7];
    arr[0] = 1;
    arr[1] = 1;

    for (int i = 2; i < 7; i++)
    {
        arr[i] = arr[i - 2] + arr[i - 1];
    }

    printArray(arr);

    return 0;
}

Q2. 1 2 2 4 8 32 ....
   a=1 b=2 c =a*b

Ans. Approach : - #include <bits/stdc++.h>
using namespace std;

int main()
{
    int a = 1, b = 2, c;
    cout << a << " " << b << " ";
    for (int i = 2; i < 6; i++)
    {
        c = a * b;
        cout << c << " ";
        a = b;
        b = c;
    }
    return 0;
}

Approach 2 :- #include <bits/stdc++.h>
using namespace std;

void printArray(int arr[])
{
    for (int i = 0; i < 6; i++)
    {
        cout << arr[i] << " ";
    }
}

int main()
{
    /*
        1 2 2 4 8 32 ....
        a=1 b=2 c =a*b
    */
    int arr[6];
    arr[0] = 1;
    arr[1] = 2;

    for (int i = 2; i < 6; i++)
    {
        arr[i] = arr[i - 2] * arr[i - 1];
    }

    printArray(arr);

    return 0;
}

Q3. 1 2 3 6 11 20 ....
    a=1 b=2 c=3  d =a+b+c

Ans. Approach 1 :- #include <bits/stdc++.h>
using namespace std;

int main()
{
    int a = 1, b = 2, c = 3, d;
    cout << a << " " << b << " " << c << " ";
    for (int i = 4; i <= 6; i++)
    {
        d = a + b + c;
        cout << d << " ";
        a = b;
        b = c;
        c = d;
    }
    return 0;
}

Approch 2 : - #include <bits/stdc++.h>
using namespace std;

void printArray(int arr[])
{
    for (int i = 0; i < 6; i++)
    {
        cout << arr[i] << " ";
    }
}

int main()
{
    int arr[6];
    arr[0] = 1;
    arr[1] = 2;
    arr[2] = 3;

    for (int i = 3; i < 6; i++)
    {
        arr[i] = arr[i - 3] + arr[i - 2] + arr[i - 1];
    }

    printArray(arr);

    return 0;
}

Q4. 1 2 4 8 32 ....
    a=1 b=2 c= power of 2

Ans. Approach 1 : -#include <bits/stdc++.h>
using namespace std;

int main()
{
    int a = 1, b = 2, c;
    cout << a << " " << b << " ";
    for (int i = 2; i <= 5; i++)
    {
        c = pow(2, i);
        cout << c << " ";
    }
    return 0;
}

Approach 2 :- #include <bits/stdc++.h>
using namespace std;

void printArray(int arr[])
{
    for (int i = 0; i < 5; i++)
    {
        cout << arr[i] << " ";
    }
}

int main()
{
    int arr[5];
    arr[0] = 1;
    arr[1] = 2;

    int count = 1;
    for (int i = 2; i < 5; i++)
    {
        count++;
        arr[i] = pow(2, count);
    }

    printArray(arr);

    return 0;
}


Q5. 1 2 3 6 18 .....
    a =1 b=2 c=3 d =c*b

Ans. Approach 1 :- #include <bits/stdc++.h>
using namespace std;

int main()
{
    int a = 1, b = 2, c = 3, d;
    cout << a << " " << b << " " << c << " ";
    for (int i = 1; i <= 2; i++)
    {
        d = b * c;
        cout << d << " ";
        b = c;
        c = d;
    }
    return 0;
}

Approach : - #include <bits/stdc++.h>
using namespace std;

void printArray(int arr[])
{
    for (int i = 0; i < 5; i++)
    {
        cout << arr[i] << " ";
    }
}

int main()
{
    int arr[5];
    arr[0] = 1;
    arr[1] = 2;
    arr[2] = 3;

    for (int i = 3; i <= 5; i++)
    {
        arr[i] = arr[i - 2] * arr[i - 1];
    }

    printArray(arr);

    return 0;
}

Q6. there are four variables a = 1 b= 2 c= 3 c=4
    formulate  1 2 3 4 5 7 9 12 16  and so on

Ans. Approach 1 :- #include <bits/stdc++.h>
using namespace std;

int main()
{
    int arr[9];
    arr[0] = 1;
    arr[1] = 2;
    arr[2] = 3;
    arr[3] = 4;

    for (int i = 4; i < 9; i++)
    {
        arr[i] = arr[i - 3] + arr[i - 2];
    }

    for (int i = 0; i < 9; i++)
    {
        cout << arr[i] << " ";
    }
    return 0;
}

Approach 2 : - 